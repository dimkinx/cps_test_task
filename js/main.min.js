/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/modules/expander.js":
/*!********************************!*\
  !*** ./js/modules/expander.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const containersToExpand = document.querySelectorAll('[data-expander]');
const buttonClickHandler = evt => {
  const {
    target
  } = evt;
  if (!target.closest('[data-expander]')) {
    return;
  }
  const container = target.closest('[data-expander]');
  const content = container.querySelector('[data-expander-content]');
  const button = container.querySelector('[data-expander-btn]');
  const buttonText = button.querySelector('[data-expander-btn-text]');
  evt.preventDefault();
  content.removeAttribute('style');
  if (button.getAttribute('aria-expanded') === 'true') {
    button.setAttribute('aria-expanded', 'false');
    buttonText.textContent = container.dataset.expander === 'text' ? 'Читать далее' : 'Показать всё';
    return;
  }
  content.style.maxHeight = `${content.scrollHeight}px`;
  button.setAttribute('aria-expanded', 'true');
  buttonText.textContent = 'Скрыть';
};
const activateExpander = container => {
  const button = container.querySelector('[data-expander-btn]');
  button.addEventListener('click', buttonClickHandler);
};
const initExpander = () => {
  if (containersToExpand.length) {
    containersToExpand.forEach(activateExpander);
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initExpander);

/***/ }),

/***/ "./js/modules/menu.js":
/*!****************************!*\
  !*** ./js/modules/menu.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/lock-unlock-focus */ "./js/utils/lock-unlock-focus.js");
/* harmony import */ var _utils_lock_unlock_scroll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/lock-unlock-scroll */ "./js/utils/lock-unlock-scroll.js");


const EVENT_TIMEOUT = 600;
const MIN_RESOLUTION = 1366;
const breakpoint = window.matchMedia(`(min-width:${MIN_RESOLUTION}px)`);
const menu = document.querySelector('[data-menu]');
const btn = menu.querySelector('[data-menu-btn]');
let windowWidth = window.innerWidth;
const documentClickHandler = evt => {
  const {
    target
  } = evt;
  if (evt.target.matches('[data-menu-btn]')) {
    target.blur();
    target.parentNode.parentNode.blur();
  }
  if (!target.closest('[data-menu-btn]')) {
    return;
  }
  evt.preventDefault();
  // eslint-disable-next-line no-use-before-define
  openMenu();
};
const documentKeydownHandler = evt => {
  const isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
  if (isEscKey && !document.querySelector('.modal.is-active')) {
    evt.preventDefault();
    // eslint-disable-next-line no-use-before-define
    closeMenu();
  }
};
const menuCloseClickHandler = evt => {
  const {
    target
  } = evt;
  if (target !== menu && !target.closest('[data-menu-btn]')) {
    return;
  }
  evt.preventDefault();
  // eslint-disable-next-line no-use-before-define
  closeMenu();
};
const windowResizeHandler = () => {
  if (windowWidth === window.innerWidth) {
    return;
  }
  windowWidth = window.innerWidth;
  if (breakpoint.matches && menu.closest('[data-menu-opened]')) {
    // eslint-disable-next-line no-use-before-define
    closeMenu();
  }
};
const addListeners = () => {
  menu.addEventListener('click', menuCloseClickHandler);
  document.addEventListener('keydown', documentKeydownHandler);
  window.addEventListener('resize', windowResizeHandler);
};
const removeListeners = () => {
  menu.removeEventListener('click', menuCloseClickHandler);
  document.removeEventListener('keydown', documentKeydownHandler);
  window.removeEventListener('resize', windowResizeHandler);
};
function closeMenu() {
  menu.setAttribute('data-menu-closed', '');
  setTimeout(() => {
    menu.removeAttribute('data-menu-opened', '');
    menu.removeAttribute('data-menu-closed', '');
    btn.setAttribute('aria-expanded', 'false');
    (0,_utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__.unlockFocus)();
    (0,_utils_lock_unlock_scroll__WEBPACK_IMPORTED_MODULE_1__.unlockScroll)();
    removeListeners();
    document.addEventListener('click', documentClickHandler);
  }, EVENT_TIMEOUT / 2);
}
function openMenu() {
  document.removeEventListener('click', documentClickHandler);
  (0,_utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__.lockFocus)('[data-menu]');
  (0,_utils_lock_unlock_scroll__WEBPACK_IMPORTED_MODULE_1__.lockScroll)();
  menu.setAttribute('data-menu-opened', '');
  btn.setAttribute('aria-expanded', 'true');
  setTimeout(() => {
    addListeners();
  }, EVENT_TIMEOUT);
}
const initMenu = () => {
  document.addEventListener('click', documentClickHandler);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initMenu);

/***/ }),

/***/ "./js/modules/modal.js":
/*!*****************************!*\
  !*** ./js/modules/modal.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/lock-unlock-focus */ "./js/utils/lock-unlock-focus.js");
/* harmony import */ var _utils_lock_unlock_scroll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/lock-unlock-scroll */ "./js/utils/lock-unlock-scroll.js");


const EVENT_TIMEOUT = 600;
const modalOpenElements = document.querySelectorAll('[data-open-modal]');
let openedModalElement = null;
let modalName = null;
let enableScrolling = true;
const documentClickHandler = evt => {
  const {
    target
  } = evt;
  if (evt.target.matches('[data-open-modal]')) {
    target.blur();
    target.parentNode.parentNode.blur();
  }
  if (!target.closest('[data-open-modal]')) {
    return;
  }
  evt.preventDefault();
  modalName = target.closest('[data-open-modal]').dataset.openModal;
  if (!modalName) {
    return;
  }

  // eslint-disable-next-line no-use-before-define
  openModal();
};
const documentKeydownHandler = evt => {
  const isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
  if (isEscKey) {
    evt.preventDefault();
    // eslint-disable-next-line no-use-before-define
    closeModal(document.querySelector('.modal.is-active').dataset.modal);
  }
};
const modalClickHandler = evt => {
  const {
    target
  } = evt;
  if (!target.closest('[data-close-modal]')) {
    return;
  }

  // eslint-disable-next-line no-use-before-define
  closeModal(target.closest('[data-modal]').dataset.modal);
};
const addListeners = modal => {
  modal.addEventListener('click', modalClickHandler);
  document.addEventListener('keydown', documentKeydownHandler);
};
const removeListeners = modal => {
  modal.removeEventListener('click', modalClickHandler);
  document.removeEventListener('keydown', documentKeydownHandler);
};
function closeModal() {
  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : modalName;
  const modal = document.querySelector(`[data-modal="${name}"]`);
  const isMenuOpened = Boolean(document.querySelector('[data-menu-opened]'));
  document.removeEventListener('click', documentClickHandler);
  if (!modal || !modal.classList.contains('is-active')) {
    return;
  }
  (0,_utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__.unlockFocus)();
  if (isMenuOpened) {
    (0,_utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__.lockFocus)('[data-menu]');
    enableScrolling = false;
  }
  modal.classList.remove('is-active');
  removeListeners(modal);
  if (enableScrolling) {
    setTimeout(() => {
      (0,_utils_lock_unlock_scroll__WEBPACK_IMPORTED_MODULE_1__.unlockScroll)();
    }, EVENT_TIMEOUT);
  }
  setTimeout(() => {
    document.addEventListener('click', documentClickHandler);
  }, EVENT_TIMEOUT);
  enableScrolling = true;
}
function openModal() {
  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : modalName;
  const modal = document.querySelector(`[data-modal="${name}"]`);
  const isMenuOpened = Boolean(document.querySelector('[data-menu-opened]'));
  if (!modal || modal.classList.contains('is-active')) {
    return;
  }
  document.removeEventListener('click', documentClickHandler);
  openedModalElement = document.querySelector('.modal.is-active');
  if (openedModalElement) {
    enableScrolling = false;
    closeModal(openedModalElement.dataset.modal);
  }
  modal.classList.add('is-active');
  if (!openedModalElement && !isMenuOpened) {
    (0,_utils_lock_unlock_scroll__WEBPACK_IMPORTED_MODULE_1__.lockScroll)();
  }
  (0,_utils_lock_unlock_focus__WEBPACK_IMPORTED_MODULE_0__.lockFocus)('.modal.is-active');
  setTimeout(() => {
    addListeners(modal);
    document.addEventListener('click', documentClickHandler);
  }, EVENT_TIMEOUT);
}
const initModal = () => {
  if (modalOpenElements.length) {
    document.addEventListener('click', documentClickHandler);
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initModal);

/***/ }),

/***/ "./js/modules/slider.js":
/*!******************************!*\
  !*** ./js/modules/slider.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const MIN_RESOLUTION = 768;
const breakpoint = window.matchMedia(`(min-width:${MIN_RESOLUTION}px)`);
const sliderNodes = document.querySelectorAll('[data-swiper]');
const slidersCollection = new Map();
let windowWidth = window.innerWidth;
const createConfig = (dataAttrValue, configType) => configType && configType === 'simple' ? {
  wrapperClass: `${dataAttrValue}__list`,
  slideClass: `${dataAttrValue}__item`,
  slidesPerView: 'auto',
  a11y: {
    slideLabelMessage: 'Пункт меню {{index}} из {{slidesLength}}'
  }
} : {
  wrapperClass: `${dataAttrValue}__list`,
  slideClass: `${dataAttrValue}__item`,
  pagination: true,
  createElements: true,
  slidesPerView: 'auto',
  grabCursor: true,
  a11y: {
    slideLabelMessage: 'Слайд {{index}} из {{slidesLength}}'
  },
  breakpoints: {
    0: {
      spaceBetween: 16,
      enabled: true
    },
    360: {
      spaceBetween: 24,
      enabled: true
    },
    768: {
      enabled: false,
      spaceBetween: 0
    }
  }
};
const createSliders = () => {
  sliderNodes.forEach(sliderNode => {
    const swiper = new window.Swiper(sliderNode, createConfig(sliderNode.dataset.swiper, sliderNode.dataset.swiperConfigType));
    slidersCollection.set(sliderNode.dataset.swiper, swiper);
  });
};
const windowResizeHandler = () => {
  if (windowWidth === window.innerWidth) {
    return;
  }
  windowWidth = window.innerWidth;
  if (breakpoint.matches && slidersCollection.size) {
    slidersCollection.forEach(slider => {
      if (!slider.isBeginning) {
        slider.slideTo(0);
      }
    });
  }
};
const initSliders = () => {
  if (sliderNodes.length) {
    createSliders();
    window.addEventListener('resize', windowResizeHandler);
    return;
  }
  window.removeEventListener('resize', windowResizeHandler);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initSliders);

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const iosChecker = () => ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (iosChecker);

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

const iosVhFix = () => {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0,_ios_checker__WEBPACK_IMPORTED_MODULE_0__["default"])()) {
      let vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);
      window.addEventListener('resize', () => {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
      });
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (iosVhFix);

/***/ }),

/***/ "./js/utils/lock-unlock-focus.js":
/*!***************************************!*\
  !*** ./js/utils/lock-unlock-focus.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lockFocus": () => (/* binding */ lockFocus),
/* harmony export */   "unlockFocus": () => (/* binding */ unlockFocus)
/* harmony export */ });
const SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', '[tabindex]:not([tabindex^="-"])'];
let lockedSelector = null;
let focusableElements = null;
let endElement = null;
const documentKeydownHandler = evt => {
  const {
    activeElement
  } = document;
  if (evt.key === 'Tab') {
    if (!focusableElements.length) {
      evt.preventDefault();
      activeElement.blur();
      return;
    }
    if (focusableElements.length === 1) {
      evt.preventDefault();
      focusableElements[0].focus();
      return;
    }
    if (focusableElements.length > 1 && !activeElement.closest(lockedSelector)) {
      evt.preventDefault();
      focusableElements[0].focus();
      return;
    }
  }
  if (evt.key === 'Tab' && !evt.shiftKey && activeElement === focusableElements[focusableElements.length - 1]) {
    evt.preventDefault();
    focusableElements[0].focus();
  }
  if (evt.key === 'Tab' && evt.shiftKey && activeElement === focusableElements[0]) {
    evt.preventDefault();
    focusableElements[focusableElements.length - 1].focus();
  }
};
const unlockFocus = function () {
  let returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  if (endElement && returnFocus) {
    endElement.focus();
  }
  lockedSelector = null;
  focusableElements = null;
  endElement = null;
  document.removeEventListener('keydown', documentKeydownHandler);
};
const lockFocus = function (selector) {
  let startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  unlockFocus();
  lockedSelector = selector;
  const lockedElement = document.querySelector(lockedSelector);
  if (!lockedElement) {
    return;
  }
  focusableElements = lockedElement.querySelectorAll(SELECTORS);
  endElement = document.activeElement;
  const startElement = lockedElement.querySelector('[data-focus]') || focusableElements[0];
  if (endElement) {
    endElement.blur();
  }
  if (startElement && startFocus) {
    startElement.focus();
  }
  document.addEventListener('keydown', documentKeydownHandler);
};


/***/ }),

/***/ "./js/utils/lock-unlock-scroll.js":
/*!****************************************!*\
  !*** ./js/utils/lock-unlock-scroll.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lockScroll": () => (/* binding */ lockScroll),
/* harmony export */   "unlockScroll": () => (/* binding */ unlockScroll)
/* harmony export */ });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

const lockClass = (0,_ios_checker__WEBPACK_IMPORTED_MODULE_0__["default"])() ? 'scroll-lock-ios' : 'scroll-lock';
const getScrollbarWidth = () => window.innerWidth - document.documentElement.clientWidth;
const getBodyScrollTop = () => window.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
const lockScroll = () => {
  document.body.dataset.scroll = document.body.dataset.scroll ?? getBodyScrollTop();
  if (getScrollbarWidth()) {
    document.body.style.paddingRight = `${getScrollbarWidth()}px`;
  }
  document.body.style.top = `-${document.body.dataset.scroll}px`;
  document.body.classList.add(lockClass);
};
const unlockScroll = () => {
  document.body.classList.remove(lockClass);
  window.scrollTo(0, +document.body.dataset.scroll);
  document.body.style.paddingRight = null;
  document.body.style.top = null;
  document.body.removeAttribute('data-scroll');
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_slider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/slider */ "./js/modules/slider.js");
/* harmony import */ var _modules_menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/menu */ "./js/modules/menu.js");
/* harmony import */ var _modules_expander__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/expander */ "./js/modules/expander.js");
/* harmony import */ var _modules_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/modal */ "./js/modules/modal.js");





window.addEventListener('DOMContentLoaded', () => {
  (0,_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["default"])();
  (0,_modules_slider__WEBPACK_IMPORTED_MODULE_1__["default"])();
  window.addEventListener('load', () => {
    (0,_modules_menu__WEBPACK_IMPORTED_MODULE_2__["default"])();
    (0,_modules_expander__WEBPACK_IMPORTED_MODULE_3__["default"])();
    (0,_modules_modal__WEBPACK_IMPORTED_MODULE_4__["default"])();
  });
});
})();

/******/ })()
;
//# sourceMappingURL=main.min.js.map